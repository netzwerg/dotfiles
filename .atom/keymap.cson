# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/customizing-atom#customizing-key-bindings
# * https://atom.io/docs/latest/advanced/keymaps
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson

# IntelliJ https://github.com/geapi/atomJ/blob/master/keymap.cson

'.editor':
  'cmd-shift-o': 'fuzzy-finder:toggle-file-finder'
  'cmd-1': 'tree-view:toggle'
  'alt-shift-up': 'editor:move-line-up'
  'alt-shift-down':'editor:move-line-down'
  'cmd-shift-w':'pane:close-other-items'
  'cmd-shift-a': 'command-palette:toggle'
  'cmd-l': 'go-to-line:toggle'
  'ctrl-alt-cmd-up': 'pane:split-right'
  'ctrl-alt-cmd-down': 'pane:split-down'
  'ctrl-w': 'editor:select-word'

'atom-workspace atom-text-editor:not([mini])':
  'cmd-d': 'editor:duplicate-lines'
  'cmd-shift-j': 'editor:join-lines'

'.platform-darwin atom-text-editor':
  'cmd-e': 'fuzzy-finder:toggle-buffer-finder'

'body':
  'cmd-shift-w':'pane:close-other-items'

'atom-text-editor':
  'alt-up': 'expand-region:expand'
  'alt-down': 'expand-region:shrink'
